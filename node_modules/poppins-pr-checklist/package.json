{
  "name": "poppins-pr-checklist",
  "version": "0.0.3",
  "description": "Mary Poppins plugin for responding to new PRs with a checklist of PR guidelines in a Github comment.",
  "main": "task.js",
  "scripts": {
    "test": "mocha tests"
  },
  "keywords": [
    "mary-poppins"
  ],
  "author": {
    "name": "Brian Ford"
  },
  "license": "MIT",
  "dependencies": {
    "lodash": "~1.3.1",
    "q": "~0.9.7"
  },
  "readme": "# poppins-pr-checklist\n\nMary Poppins plugin for responding to new PRs with a checklist of PR guidelines in a Github comment.\n\n![poppins in action](https://raw.github.com/btford/poppins-pr-checklist/master/img/in-action.png)\n\n\n## Install\n\n`npm install poppins-pr-checklist`\n\n\n## Configure\n\nTo use this plugin, you need to load it in your config file with `couldYouPlease`:\n\n```javascript\n// config.js\nmodule.exports = function (poppins) {\n\n  poppins.config = { /*...*/ };\n\n  poppins.couldYouPlease('pr-checklist');\n\n  // pr checklist\n  poppins.plugins.prChecklist.greeting = 'Hello';\n  poppins.plugins.prChecklist.checks = [\n    { message: 'Foo', condition: function (data) { return false; } }\n  ];\n  poppins.plugins.prChecklist.closing = 'Farewell';\n};\n```\n\nBy default, Mary Poppins will only respond with a greeting and closing.\nYou have to configure her [checks](https://github.com/btford/poppins-pr-checklist#poppinspluginsprchecklistchecks) to get a list.\n\n\n### `poppins.plugins.prChecklist.greeting`\n\nString to start the response with.\nDefaults to `\"Greetings.\"`.\n\n\n### `poppins.plugins.prChecklist.closing`\n\nString to start the response with.\nDefaults to `\"Farewell.\"`.\n\n\n### `poppins.plugins.prChecklist.checks`\n\nArray of `{check}` objects.\nDefaults to an empty array.\n\nA `{check}` object has two properties:\n* `message`: the string that corresponds to the text of the checkbox item.\n* `condition`: a function that returns a representing whether or not the checkbox should be checked. It can also return a promise. The function receives one argument, `data`, which is a JSON object representing the PR in question. See the Github API for a description of the object.\n\nHere's an example check:\n\n```javascript\nvar myCheck = {\n  message: 'The PR has an odd number.',\n  condition: function (data) { return data; }\n};\n```\n\n\n## Checklist Plugins\n\nBecause checks are just objects in the `poppins.plugins.prChecklist.checks` array, you can make a plugin that add new checks by appending to that array.\n\n```javascript\n// in a new module called `poppins-my-check`\nmodule.exports = function (poppins) {\n  poppins.plugins.prChecklist.checks.push({\n    message: 'This is my Custom Check', condition: function (data) { return true; }\n  });\n};\n```\n\nThen you can load this module like you would any other:\n\n```javascript\n// config.js:\nmodule.exports = function (poppins) {\n  poppins.couldYouPlease('pr-checklist');\n  poppins.couldYouPlease('my-check');\n};\n```\n\nIt's plugins all the way down!\n\nSee [poppins-check-cla](https://github.com/btford/poppins-check-cla) and [poppins-check-commit](https://github.com/btford/poppins-check-commit) for an example.\n\n# License\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "poppins-pr-checklist@0.0.3",
  "dist": {
    "shasum": "8b89e1b2062a9cfaa1a2822fcfe133118fc04b54"
  },
  "_from": "poppins-pr-checklist@",
  "_resolved": "https://registry.npmjs.org/poppins-pr-checklist/-/poppins-pr-checklist-0.0.3.tgz"
}
